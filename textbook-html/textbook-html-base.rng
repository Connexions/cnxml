<grammar ns="http://www.w3.org/1999/xhtml"
         xmlns="http://relaxng.org/ns/structure/1.0">

<!-- See https://www.w3.org/MarkUp/2010/xhtml-m12n-relaxng-20101216/#sec_3.4.3. -->
<include href="./xhtml/xhtml.rng"/>

<!-- <include href="../cnxml/xml/mathml/schema/rng/2.0/mathml2.rng"/> -->
<!-- <include href="http://www.w3.org/Math/RelaxNG/mathml3/mathml3.rng"/> -->
<include href="./mathml2.rng"/>
<define name="Inline.class" combine="choice">
  <ref name="math"/>
</define>

<!-- Placeholder for enums -->
<define name="TODO.enum.datatype">
  <text/>
</define>


<define name="UUID-and-version.datatype">
  <text/>
</define>

<define name="Sha.datatype">
  <text/>
</define>

<define name="ShortId.datatype">
  <text/>
</define>

<define name="UserLogin.datatype">
  <text/>
</define>

<define name="UserName.datatype">
  <text/>
</define>


<define name="Boolean.datatype">
  <choice>
    <value>true</value>
    <value>false</value>
  </choice>
</define>

<!-- Mathematics and Statistics -->
<!-- TODO: enumerate the options -->
<define name="Subject.datatype">
  <text/>
</define>


<define name="id.attrib.required">
  <attribute name="id">
    <ref name="ID.datatype"/>
  </attribute>
</define>


<define name="Structure.Page">
  <element name="div">
    <attribute name="data-type">
      <value>page</value>
    </attribute>
    <ref name="class.attrib"/>
    <ref name="id.attrib.required"/>
    <ref name="Structure.PageMetadata"/>
    <zeroOrMore>
      <ref name="Flow.model"/>
    </zeroOrMore>
    <optional>
      <ref name="Content.FootnoteRefs"/>
    </optional>
  </element>
</define>


<define name="Structure.Chapter">
  <element name="div">
    <attribute name="data-type">
      <value>chapter</value>
    </attribute>
    <ref name="Structure.ChapterMetadata"/>
    <element name="h1">
      <attribute name="data-type">
        <value>document-title</value>
      </attribute>
      <ref name="Inline.model"/>
    </element>
    <oneOrMore>
      <ref name="Structure.Page"/>
    </oneOrMore>
  </element>
</define>



<define name="Structure.PageMetadata">
  <element name="div">
    <attribute name="data-type">
      <value>metadata</value>
    </attribute>
    <ref name="Structure.Metadata.Title"/>
    <ref name="Structure.Metadata.Uri"/>
    <ref name="Structure.Metadata.ShortId"/>
    <ref name="Structure.Metadata.Authors"/>
    <ref name="Structure.Metadata.Publishers"/>
    <ref name="Structure.Metadata.Permissions"/>
    <ref name="Structure.Metadata.Description"/>
    <ref name="Structure.Metadata.Keywords"/>
    <optional>
      <ref name="Structure.Metadata.Subjects"/>
    </optional>
    <optional>
      <ref name="Structure.Metadata.Resources"/>
    </optional>
  </element>
</define>

<define name="Structure.Metadata.Title">
  <element name="h1">
    <attribute name="data-type">
      <value>document-title</value>
    </attribute>
    <attribute name="itemprop">
      <value>name</value>
    </attribute>
    <ref name="Inline.model"/>
  </element>
</define>

<define name="Structure.Metadata.Uri">
  <element name="span">
    <attribute name="data-type">
      <value>cnx-archive-uri</value>
    </attribute>
    <attribute name="data-value">
      <ref name="UUID-and-version.datatype"/>
    </attribute>
  </element>
</define>

<define name="Structure.Metadata.ShortId">
  <element name="span">
    <attribute name="data-type">
      <value>cnx-archive-shortid</value>
    </attribute>
    <attribute name="data-value">
      <ref name="ShortId.datatype"/>
    </attribute>
  </element>
</define>

<define name="Structure.Metadata.Authors">
  <element name="div">
    <attribute name="class">
      <value>authors</value>
    </attribute>
    <oneOrMore>
      <group>
        <!-- Allow text like "Edited by:" intermingled in the DOM -->
        <optional>
          <text/>
        </optional>
        <ref name="Structure.Metadata.Authors.Item"/>
      </group>
    </oneOrMore>
    <!-- Allow text like "Edited by:" intermingled in the DOM -->
    <optional>
      <text/>
    </optional>
  </element>
</define>

<define name="Structure.Metadata.Authors.Item">
  <element name="span">
    <attribute name="data-type">
      <value>author</value>
    </attribute>
    <ref name="id.attrib.required"/>
    <attribute name="itemprop">
      <value>author</value>
    </attribute>
    <attribute name="itemscope">
      <value>itemscope</value>
    </attribute>
    <attribute name="itemtype">
      <value>http://schema.org/Person</value>
    </attribute>
    <element name="a">
      <attribute name="data-type">
        <value>cnx-id</value>
      </attribute>
      <attribute name="href">
        <ref name="Text.datatype"/>
      </attribute>
      <attribute name="itemprop">
        <value>url</value>
      </attribute>
      <ref name="Text.datatype"/>
    </element>
  </element>
</define>

<define name="Structure.Metadata.Publishers">
  <element name="div">
    <attribute name="class">
      <value>publishers</value>
    </attribute>
    <oneOrMore>
      <group>
        <!-- Allow text like "Edited by:" intermingled in the DOM -->
        <optional>
          <text/>
        </optional>
        <ref name="Structure.Metadata.Publishers.Item"/>
      </group>
    </oneOrMore>
    <!-- Allow text like "Edited by:" intermingled in the DOM -->
    <optional>
      <text/>
    </optional>
  </element>
</define>

<!-- Copy/Pasta from Book.Metadata.Authors.Item
  TODO: Combine these somehow.
-->
<define name="Structure.Metadata.Publishers.Item">
  <element name="span">
    <attribute name="data-type">
      <value>publisher</value>
    </attribute>
    <ref name="id.attrib.required"/>
    <attribute name="itemprop">
      <value>publisher</value>
    </attribute>
    <attribute name="itemscope">
      <value>itemscope</value>
    </attribute>
    <attribute name="itemtype">
      <value>http://schema.org/Person</value>
    </attribute>
    <element name="a">
      <attribute name="data-type">
        <value>cnx-id</value>
      </attribute>
      <attribute name="href">
        <ref name="Text.datatype"/>
      </attribute>
      <attribute name="itemprop">
        <value>url</value>
      </attribute>
      <ref name="Text.datatype"/>
    </element>
  </element>
</define>


<define name="Structure.Metadata.Permissions">
  <!-- change class="permissions" to some other attribute -->
  <element name="div">
    <attribute name="class">
      <value>permissions</value>
    </attribute>
    <optional>
      <ref name="Structure.Metadata.Copyrights"/>
    </optional>
    <element name="p">
      <attribute name="class">
        <value>license</value>
      </attribute>
      <text/>
      <!-- <a data-type="license" itemprop="..."> -->
      <element name="a">
        <attribute name="data-type">
          <value>license</value>
        </attribute>
        <attribute name="href">
          <ref name="URI.datatype"/>
        </attribute>
        <attribute name="itemprop">
          <value>dc:license,lrmi:useRightsURL</value>
        </attribute>
        <text/>
      </element>
    </element>
  </element>
</define>

<define name="Structure.Metadata.Copyrights">
  <element name="p">
    <attribute name="class">
      <value>copyright</value>
    </attribute>
    <!-- Copyright: -->
    <text/>
    <!--               <span data-type="copyright-holder" id="copyright-holder-1" itemprop="copyright-holder" itemscope="itemscope" itemtype="http://schema.org/Person">
            <a data-type="cnx-id" href="cnxecon" itemprop="url">OpenStax Economics</a>
          </span> -->
    <oneOrMore>
      <ref name="Structure.Metadata.Copyrights.Item"/>
    </oneOrMore>
  </element>
</define>

<define name="Structure.Metadata.Copyrights.Item">
  <element name="span">
    <attribute name="data-type">
      <value>copyright-holder</value>
    </attribute>
    <attribute name="itemprop">
      <value>copyright-holder</value>
    </attribute>
    <attribute name="itemscope">
      <value>itemscope</value>
    </attribute>
    <attribute name="itemtype">
      <value>http://schema.org/Person</value>
    </attribute>

    <element name="a">
      <attribute name="data-type">
        <value>cnx-id</value>
      </attribute>
      <!-- TODO: This attribute is invalid. the element should not be a link -->
      <attribute name="href">
        <ref name="UserLogin.datatype"/>
      </attribute>
      <attribute name="itemprop">
        <value>url</value>
      </attribute>
      <ref name="UserName.datatype"/>
    </element>
  </element>
</define>

<!-- <span data-type="cnx-archive-uri" data-value="69619d2b-68f0-44b0-b074-a9b2bf90b2c6@11.332"/>
<span data-type="cnx-archive-shortid" data-value="aWGdK2jw@11.332"/> -->
<define name="Structure.Book.Metadata">
  <element name="div">
    <attribute name="data-type">
      <value>metadata</value>
    </attribute>
    <ref name="Structure.Metadata.Title"/>
    <ref name="Structure.Metadata.Uri"/>
    <ref name="Structure.Metadata.ShortId"/>
    <ref name="Structure.Metadata.Authors"/>
    <ref name="Structure.Metadata.Publishers"/>
    <ref name="Structure.Metadata.PrintStyle"/>
    <optional>
      <ref name="Structure.Metadata.TranslucentBinding"/>
    </optional>
    <ref name="Structure.Metadata.Permissions"/>
    <ref name="Structure.Metadata.Description"/>
    <ref name="Structure.Metadata.Subjects"/>
  </element>
</define>


<!-- <div class="print-style">
Print style:
<span data-type="print-style">ccap-economics</span>
</div> -->
<define name="Structure.Metadata.PrintStyle">
  <element name="div">
    <attribute name="class">
      <value>print-style</value>
    </attribute>
    <text/><!-- "Print style:" -->
    <element name="span">
      <attribute name="data-type">
        <value>print-style</value>
      </attribute>
      <ref name="TODO.enum.datatype"/>
    </element>
  </element>
</define>

<define name="Structure.ChapterMetadata">
  <element name="div">
    <attribute name="data-type">
      <value>metadata</value>
    </attribute>
    <ref name="Structure.Metadata.Title"/>
    <ref name="Structure.Metadata.TranslucentBinding"/>
    <ref name="Structure.Metadata.Permissions"/>
  </element>
</define>


<define name="Structure.Metadata.TranslucentBinding">
  <!-- TODO: remove me. why is this here? -->
  <element name="span">
    <attribute name="data-type">
      <value>binding</value>
    </attribute>
    <attribute name="data-value">
      <value>translucent</value>
    </attribute>
  </element>
</define>

<define name="Structure.Metadata.Description">
  <element name="div">
    <attribute name="class">
      <value>description</value>
    </attribute>
    <attribute name="data-type">
      <value>description</value>
    </attribute>
    <attribute name="itemprop">
      <value>description</value>
    </attribute>
    <oneOrMore>
      <ref name="Flow.model"/>
    </oneOrMore>
  </element>
</define>

<define name="Structure.Metadata.Keywords">
  <!-- TODO: This should probably be wrapped in an element -->
  <zeroOrMore>
    <element name="div">
      <attribute name="data-type">
        <value>keyword</value>
      </attribute>
      <attribute name="itemprop">
        <value>keywords</value>
      </attribute>
      <text/>
    </element>
  </zeroOrMore>
</define>

<!-- <div data-type="subject" itemprop="about">Mathematics and Statistics</div> -->
<define name="Structure.Metadata.Subjects">
  <zeroOrMore>
    <element name="div">
      <attribute name="data-type">
        <value>subject</value>
      </attribute>
      <attribute name="itemprop">
        <value>about</value>
      </attribute>
      <ref name="Subject.datatype"/>
    </element>
  </zeroOrMore>
</define>

<!-- <div data-type="resources" style="display: none"> <ul>
<li><a href="971b6320e705d9c81cbad7f4a98148ab91456d3b">971b6320e705d9c81cbad7f4a98148ab91456d3b</a></li>        </ul>
-->
<define name="Structure.Metadata.Resources">
  <element name="div">
    <attribute name="data-type">
      <value>resources</value>
    </attribute>
    <!-- TODO: remove this attribute, maybe the whole element. What is it used for? -->
    <attribute name="style">
      <value>display: none</value>
    </attribute>
    <optional>
      <element name="ul">
        <oneOrMore>
          <ref name="Structure.Metadata.Resources.Item"/>
        </oneOrMore>
      </element>
    </optional>
  </element>
</define>

<define name="Structure.Metadata.Resources.Item">
  <element name="li">
    <element name="a">
      <attribute name="href">
        <ref name="Sha.datatype"/>
      </attribute>
      <ref name="Sha.datatype"/>
    </element>
  </element>
</define>

<!-- The <nav id="toc"> -->
<define name="Structure.Book.ToC">
  <element name="nav">
    <attribute name="id">
      <value>toc</value>
    </attribute>
    <element name="ol">
      <zeroOrMore>
        <ref name="Structure.Book.ToC.LeafItem"/>
      </zeroOrMore>
      <oneOrMore>
        <ref name="Structure.Book.ToC.InternalItem"/>
      </oneOrMore>
      <zeroOrMore>
        <ref name="Structure.Book.ToC.LeafItem"/>
      </zeroOrMore>
    </element>
  </element>
</define>

<define name="Structure.Book.ToC.LeafItem">
  <element name="li">
    <attribute name="cnx-archive-shortid">
      <ref name="ShortId.datatype"/>
    </attribute>
    <attribute name="cnx-archive-uri">
      <ref name="UUID-and-version.datatype"/>
    </attribute>
    <element name="a">
      <attribute name="href">
        <ref name="URI.datatype"/>
      </attribute>
      <text/>
    </element>
  </element>
</define>

<define name="Structure.Book.ToC.InternalItem">
  <element name="li">
    <element name="span">
      <text/>
    </element>
    <element name="ol">
      <oneOrMore>
        <choice>
          <ref name="Structure.Book.ToC.InternalItem"/>
          <ref name="Structure.Book.ToC.LeafItem"/>
        </choice>
      </oneOrMore>
    </element>
  </element>
</define>


<!--
<meta content="en" data-type="language" itemprop="inLanguage"/>
<meta content="MathML" itemprop="accessibilityFeature"/>
<meta content="LaTeX" itemprop="accessibilityFeature"/>
<meta content="alternativeText" itemprop="accessibilityFeature"/>
<meta content="captions" itemprop="accessibilityFeature"/>
<meta content="structuredNavigation" itemprop="accessibilityFeature"/>
<meta content="2014-01-02T22:13:54Z" itemprop="dateCreated"/>
<meta content="2016-11-04T17:17:06Z" itemprop="dateModified"/>
-->
<define name="enum.attr.meta.itemprop">
  <choice>
    <value>inLanguage</value>
    <value>accessibilityFeature</value>
    <value>dateCreated</value>
    <value>dateModified</value>
  </choice>
</define>

<define name="enum.attr.meta.data-type">
  <value>language</value>
</define>

<!-- <meta content="2016-11-04T17:17:06Z" itemprop="dateModified"/> -->
<define name="meta.attlist" combine="interleave">
  <choice>
    <!-- <meta content="en" data-type="language" itemprop="inLanguage"/> -->
    <group>
      <attribute name="itemprop">
        <value>inLanguage</value>
      </attribute>
      <attribute name="data-type"><!-- TODO: Remove this attribute -->
        <value>language</value>
      </attribute>
    </group>
    <!-- <meta content="MathML" itemprop="accessibilityFeature"/> -->
    <!-- <meta content="LaTeX" itemprop="accessibilityFeature"/> -->
    <!-- <meta content="alternativeText" itemprop="accessibilityFeature"/> -->
    <!-- <meta content="captions" itemprop="accessibilityFeature"/> -->
    <!-- <meta content="structuredNavigation" itemprop="accessibilityFeature"/> -->
    <!-- <meta content="2014-01-02T22:13:54Z" itemprop="dateCreated"/> -->
    <!-- <meta content="2016-11-04T17:17:06Z" itemprop="dateModified"/>  -->
    <attribute name="itemprop">
      <choice>
        <value>accessibilityFeature</value>
        <value>dateCreated</value>
        <value>dateModified</value>
      </choice>
    </attribute>
  </choice>
</define>


<!-- <table data-label=""> -->
<define name="table.attlist" combine="interleave">
  <optional>
    <attribute name="data-label">
      <ref name="Text.datatype"/>
    </attribute>
  </optional>
  <optional>
    <attribute name="data-frame">
      <ref name="Text.datatype"/>
    </attribute>
  </optional>
  <optional>
    <attribute name="data-colsep">
      <ref name="Number.datatype"/>
    </attribute>
  </optional>
  <optional>
    <attribute name="data-rowsep">
      <ref name="Number.datatype"/>
    </attribute>
  </optional>
</define>



<!-- <td data-valign="top"> -->
<define name="enum.attr.td.data-valign">
  <choice>
    <value>top</value>
    <value>middle</value>
    <value>bottom</value>
  </choice>
</define>
<define name="enum.attr.td.data-align">
  <choice>
    <value>left</value>
    <value>center</value>
    <value>right</value>
    <value>justify</value>
    <value>char</value>
  </choice>
</define>
<define name="td.attlist" combine="interleave">
  <optional>
    <attribute name="data-valign">
      <ref name="enum.attr.td.data-valign"/>
    </attribute>
  </optional>
  <optional>
    <attribute name="data-align">
      <ref name="enum.attr.td.data-align"/>
    </attribute>
  </optional>
</define>

<!-- <th data-align="center"> -->
<define name="th.attlist" combine="interleave">
  <optional>
    <attribute name="data-valign">
      <ref name="enum.attr.td.data-valign"/>
    </attribute>
  </optional>
  <optional>
    <attribute name="data-align">
      <ref name="enum.attr.td.data-align"/>
    </attribute>
  </optional>
</define>



<!-- <ol data-number-style="lower-alpha"> -->
<define name="enum.attr.ol.data-number-style">
  <choice>
    <value>arabic</value><!-- TODO: remove the default -->
    <value>lower-alpha</value>
    <value>upper-alpha</value>
    <value>lower-roman</value>
    <value>upper-roman</value>
  </choice>
</define>
<define name="enum.attr.ol.data-mark-suffix">
  <text/><!-- TODO: maybe disallow this and just discard it in the CNXML->HTML conversion -->
</define>
<define name="ol.attlist" combine="interleave">
  <optional>
    <attribute name="data-number-style">
      <ref name="enum.attr.ol.data-number-style"/>
    </attribute>
  </optional>
  <optional>
    <attribute name="data-mark-suffix">
      <ref name="enum.attr.ol.data-mark-suffix"/>
    </attribute>
  </optional>
  <!-- algebra trigonometry uses this once -->
  <optional>
    <attribute name="data-mark-prefix">
      <ref name="enum.attr.ol.data-mark-suffix"/>
    </attribute>
  </optional>
</define>



<!-- <ul data-bullet-style="bullet"  -->
<define name="enum.attr.ul.data-bullet-style">
  <choice>
    <value>bullet</value><!-- TODO: remove the default -->
    <value>open-circle</value>
    <value>pilcrow</value>
    <value>rpilcrow</value>
    <value>asterisk</value>
    <value>dash</value>
    <value>section</value>
    <value>none</value>
  </choice>
</define>
<define name="ul.attlist" combine="interleave">
  <optional>
    <attribute name="data-bullet-style">
      <ref name="enum.attr.ul.data-bullet-style"/>
    </attribute>
  </optional>
  <optional>
    <attribute name="data-mark-suffix">
      <ref name="enum.attr.ol.data-mark-suffix"/>
    </attribute>
  </optional>
  <!-- lists have data-labeled-item="true" so CSS can set list-style-type: none; -->
  <optional>
    <attribute name="data-labeled-item">
      <value>true</value>
    </attribute>
  </optional>
</define>

<!-- <li cnx-archive-shortid="vPtYALiD@9" cnx-archive-uri="bcfb5800-b883-4a63-8599-e098b407ddfc@9"> (in the ToC) -->
<define name="li.attlist" combine="interleave">
  <optional><!-- Make these required when in the ToC -->
    <attribute name="cnx-archive-shortid"><!-- TODO: Rename this to data-* -->
      <ref name="Text.datatype"/>
    </attribute>
    <attribute name="cnx-archive-uri"><!-- TODO: Rename this to data-* -->
      <ref name="Text.datatype"/>
    </attribute>
  </optional>
  <optional>
    <attribute name="data-label">
      <ref name="Text.datatype"/>
    </attribute>
  </optional>
</define>



<!-- <img data-alt="..." data-media-type="..."> -->
<define name="enum.attr.img.data-media-type">
  <choice>
    <value>image/png</value>
    <value>image/jpeg</value>
    <value>application/postscript</value>
    <!-- TODO: automatically convert this to jpeg -->
    <value>image/jpg</value>
  </choice>
</define>
<define name="img.attlist" combine="interleave">
  <optional>
    <attribute name="data-media-type">
      <ref name="enum.attr.img.data-media-type"/>
    </attribute>
  </optional>
  <optional>
    <attribute name="data-longdesc">
      <ref name="URI.datatype"/>
    </attribute>
  </optional>
  <optional>
    <attribute name="data-print-width">
      <ref name="Length.datatype"/>
    </attribute>
  </optional>

  <!-- For images with thumbnails m42042 in Physics (col11406) -->
  <optional>
    <attribute name="data-print">
      <ref name="Boolean.datatype"/>
    </attribute>
  </optional>
</define>




<!-- <strong data-effect="..."> -->
<define name="enum.attr.strong.data-effect">
  <!-- TODO: remove the default -->
  <value>bold</value>
</define>
<define name="strong.attlist" combine="interleave">
  <optional>
    <attribute name="data-effect">
      <ref name="enum.attr.strong.data-effect"/>
    </attribute>
  </optional>
</define>



<!-- <em data-effect="..."> -->
<define name="enum.attr.em.data-effect">
  <choice>
    <!-- TODO: remove the default -->
    <value>italics</value>
    <value>smallcaps</value>
  </choice>
</define>
<define name="em.attlist" combine="interleave">
  <optional>
    <attribute name="data-effect">
      <ref name="enum.attr.em.data-effect"/>
    </attribute>
  </optional>
</define>



<!-- <span data-type="..." data-alt="..."> -->
<define name="enum.attr.span.data-type">
  <choice>
    <!-- TODO: Make a separate element for a paragraph title -->
    <value>title</value>
    <!-- These are in content and should remain here -->
    <value>media</value>
    <value>term</value>
    <value>foreign</value>
    <!-- TODO: either remove these or move them in to being optional children of <cite> -->
    <value>cite-title</value>
  </choice>
</define>
<define name="span.attlist" combine="interleave">
  <optional><!-- TODO: make this required again. It is optional because of the ToC -->
    <attribute name="data-type">
      <ref name="enum.attr.span.data-type"/>
    </attribute>
  </optional>
  <optional>
    <attribute name="data-alt">
      <!-- TODO: Maybe change the CNXML conversion to use an ARIA attribute -->
      <ref name="Text.datatype"/>
    </attribute>
  </optional>

  <!-- <span data-type="cnx-archive-shortid" data-value="LJYhl4AE@11"/> -->
  <optional>
    <attribute name="data-value">
      <ref name="Text.datatype"/>
    </attribute>
  </optional>
</define>




<!-- <h1 data-type="..."> -->
<define name="enum.attr.Heading.data-type">
  <choice>
    <value>document-title</value>
    <value>title</value>

    <value>glossary-title</value>
  </choice>
</define>
<define name="enum.attr.Heading.itemprop">
  <value>name</value>
</define>
<define name="Heading.attrib" combine="interleave">
  <!-- TODO: Make a different validation structure for Page elements. That way these values are not valid within the content -->
  <attribute name="data-type">
    <ref name="enum.attr.Heading.data-type"/>
  </attribute>

  <!-- <h1 data-type="document-title" itemprop="name"> -->
  <optional>
    <attribute name="itemprop">
      <ref name="enum.attr.Heading.itemprop"/>
    </attribute>
  </optional>
</define>




<define name="div.attlist" combine="interleave">
  <optional>
    <!-- catch-all for the other, simpler data-types -->
    <attribute name="data-type">
      <ref name="enum.attr.div.data-type"/>
    </attribute>
  </optional>

  <!-- data-has-label="true" data-label="" -->
  <optional>
    <attribute name="data-label">
      <ref name="Text.datatype"/>
    </attribute>
  </optional>
  <optional>
    <attribute name="data-has-label"><!-- TODO: remove from cnxml conversion -->
      <value>true</value>
    </attribute>
  </optional>


  <!-- <div class="note economics bringhome" data-element-type="note" data-label="note" data-type="note" -->
  <optional><!-- TODO: Make this optional when data-type="note" -->
    <attribute name="data-element-type">
      <ref name="Text.datatype"/>
    </attribute>
  </optional>

</define>


<define name="Content.Space">
  <element name="span">
    <attribute name="data-type">
      <value>space</value>
    </attribute>
    <attribute name="data-count">
      <ref name="Number.datatype"/>
    </attribute>
    <ref name="Text.datatype"/>
  </element>
</define>


<define name="Content.FootnoteNumber">
  <element name="sup">
    <attribute name="data-type">
      <value>footnote-number</value>
    </attribute>
    <ref name="id.attrib.required"/>
    <element name="a">
      <attribute name="data-type">
        <value>footnote-link</value>
      </attribute>
      <attribute name="href">
        <ref name="URI.datatype"/>
      </attribute>
      <ref name="Number.datatype"/>
    </element>
  </element>
</define>

<define name="Content.ImageWithThumbnail">
  <element name="a">
    <attribute name="data-type">
      <value>image-with-thumbnail</value>
    </attribute>
    <attribute name="href">
      <ref name="URI.datatype"/>
    </attribute>
    <ref name="img"/>
  </element>
</define>

<!-- This occurs at the end of a Page
    <div
        data-type="footnote-refs"
      ><h3
          data-type="footnote-refs-title"
        >Footnotes</h3
      ><ul
          data-list-type="bulleted"
          data-bullet-style="none"
        ><li
            data-type="footnote-ref"
            id="footnote1"
          ><a
              data-type="footnote-ref-link"
              href="#footnote-ref1"
            >1</a
          > <span
              data-type="footnote-ref-content"
            >J. Hulcr et al. &#x201C;A Jungle in There: Bacteria in Belly Buttons are Highly Diverse, but Predictable.&#x201D; <em
                data-effect="italics"
              >PLoS ONE</em
            > 7 no. 11 (2012): e47712. doi:10.1371/journal.pone.0047712.</span
          ></li
        ></ul
      ></div
    > -->
<define name="Content.FootnoteRefs">
  <element name="div">
    <attribute name="data-type">
      <value>footnote-refs</value>
    </attribute>
    <element name="h3">
      <attribute name="data-type">
        <value>footnote-refs-title</value>
      </attribute>
      <value>Footnotes</value>
    </element>
    <element name="ul">
      <attribute name="data-list-type">
        <value>bulleted</value>
      </attribute>
      <attribute name="data-bullet-style">
        <value>none</value>
      </attribute>
      <oneOrMore>
        <element name="li">
          <attribute name="data-type">
            <value>footnote-ref</value>
          </attribute>
          <ref name="id.attrib.required"/>
          <element name="a">
            <attribute name="data-type">
              <value>footnote-ref-link</value>
            </attribute>
            <attribute name="href">
              <ref name="URI.datatype"/>
            </attribute>
            <ref name="Number.datatype"/>
          </element>
          <element name="span">
            <attribute name="data-type">
              <value>footnote-ref-content</value>
            </attribute>
            <ref name="Inline.model"/>
          </element>
        </element>
      </oneOrMore>
    </element>
  </element>
</define>

<!-- Optional note title -->
<define name="Content.Title.optional">
  <optional>
    <element name="div">
      <attribute name="data-type">
        <value>title</value>
      </attribute>
      <ref name="Common.attrib"/>
      <ref name="Flow.model"/>
    </element>
  </optional>
</define>

<define name="Content.Note.attrs">
  <ref name="Common.attrib"/>
  <!-- TODO: Move the following 2 into a common blockish-div-thing -->
  <optional>
    <attribute name="data-label">
      <ref name="Text.datatype"/>
    </attribute>
  </optional>
  <!-- TODO: Remove this attribute in the CNXML->HTML conversion -->
  <optional>
    <attribute name="data-has-label">
      <value>true</value>
    </attribute>
  </optional>
  <optional>
    <attribute name="data-element-type">
      <ref name="Text.datatype"/>
    </attribute>
  </optional>
  <ref name="Content.Title.optional"/>
</define>


<define name="Content.Note">
  <element name="div">
    <attribute name="data-type">
      <value>note</value>
    </attribute>
    <ref name="Content.Note.attrs"/>
    <ref name="Flow.model"/>
  </element>
</define>

<define name="Content.Equation">
  <element name="div">
    <attribute name="data-type">
      <value>equation</value>
    </attribute>
    <ref name="Content.Note.attrs"/>
    <ref name="Flow.model"/>
  </element>
</define>


<define name="Content.Problem">
  <element name="div">
    <attribute name="data-type">
      <value>problem</value>
    </attribute>
    <ref name="Content.Note.attrs"/>
    <ref name="Flow.model"/>
  </element>
</define>

<define name="Content.Solution">
  <element name="div">
    <attribute name="data-type">
      <value>solution</value>
    </attribute>
    <!-- TODO: This is a deprecated attribute -->
    <optional>
      <attribute name="data-print-placement">
        <choice>
          <value>here</value>
          <value>end</value>
        </choice>
      </attribute>
    </optional>
    <ref name="Content.Note.attrs"/>
    <ref name="Flow.model"/>
  </element>
</define>

<define name="Content.Commentary">
  <element name="div">
    <attribute name="data-type">
      <value>commentary</value>
    </attribute>
    <ref name="Content.Note.attrs"/>
    <ref name="Flow.model"/>
  </element>
</define>

<!-- TODO: Require id attributes for some elements -->
<define name="Content.Exercise">
  <element name="div">
    <attribute name="data-type">
      <value>exercise</value>
    </attribute>
    <!-- TODO: This is a deprecated attribute -->
    <optional>
      <attribute name="data-print-placement">
        <choice>
          <value>here</value>
          <value>end</value>
        </choice>
      </attribute>
    </optional>
    <ref name="Content.Note.attrs"/>
    <ref name="Content.Problem"/>
    <zeroOrMore>
      <ref name="Content.Solution"/>
    </zeroOrMore>
    <zeroOrMore>
      <ref name="Content.Commentary"/>
    </zeroOrMore>
  </element>
</define>


<define name="Content.Example">
  <element name="div">
    <attribute name="data-type">
      <value>example</value>
    </attribute>
    <ref name="Content.Note.attrs"/>
    <ref name="Flow.model"/>
  </element>
</define>


<!-- <div data-count="1" data-type="newline"  -->
<define name="Content.Newline.class">
  <attribute name="data-type">
    <value>newline</value>
  </attribute>
  <ref name="Content.Note.attrs"/>
  <optional>
    <attribute name="data-count">
      <ref name="Number.datatype"/>
    </attribute>
  </optional>
  <zeroOrMore>
    <ref name="br"/>
  </zeroOrMore>
</define>



<!-- <div data-type="..." data-list-type="..."> -->
<define name="enum.attr.div.data-type">
  <choice>
    <!-- TODO: Make a different validation structure for Page elements. That way these values are not valid within the content -->
    <value>metadata</value>
    <value>description</value>
    <value>subject</value>
    <value>keyword</value>
    <value>resources</value>
    <value>document-title</value>
    <value>abstract</value>

    <value>metadata</value>

    <!-- TODO: Don't forget about the child Heading glossary-title -->
    <value>glossary</value>
  </choice>
</define>
<define name="enum.attr.div.data-number-style">
  <choice>
    <value>arabic</value>
    <value>lower-alpha</value>
    <value>upper-alpha</value>
    <value>upper-roman</value>
    <value>lower-roman</value>
  </choice>
</define>
<define name="enum.attr.div.data-bullet-style">
  <choice>
    <value>bullet</value>
    <value>open-circle</value>
    <value>pilcrow</value>
    <value>rpilcrow</value>
    <value>asterisk</value>
    <value>dash</value>
    <value>section</value>
    <value>none</value>
  </choice>
</define>
<!-- <div data-list-type="enumerated" data-number-style="lower-alpha" data-type="list" -->
<!-- <div data-bullet-style="bullet" data-list-type="bulleted" data-type="list"  -->
<define name="div-span-list.attrs">
  <attribute name="data-type">
    <value>list</value>
  </attribute>
  <!-- TODO: This may only apply to inline lists -->
  <optional>
    <attribute name="data-mark-suffix">
      <ref name="Text.datatype"/>
    </attribute>
  </optional>
  <!-- TODO: This may only apply to inline lists -->
  <optional>
    <attribute name="data-item-sep">
      <ref name="Text.datatype"/>
    </attribute>
  </optional>
  <choice>
    <group>
      <attribute name="data-list-type">
        <choice>
          <value>bulleted</value>
          <value>labeled-item</value>
        </choice>
      </attribute>
      <optional>
        <attribute name="data-bullet-style">
          <ref name="enum.attr.div.data-bullet-style"/>
        </attribute>
      </optional>
    </group>
    <group>
      <attribute name="data-list-type">
        <value>enumerated</value>
      </attribute>
      <optional>
        <attribute name="data-number-style">
          <ref name="enum.attr.div.data-number-style"/>
        </attribute>
      </optional>
    </group>
  </choice>
  <ref name="Content.Note.attrs"/>
</define>

<define name="Content.DivList">
  <element name="div">
    <ref name="div-span-list.attrs"/>
    <oneOrMore>
      <ref name="Content.DivListItem"/>
    </oneOrMore>
  </element>
</define>


<!-- <div data-count="1" data-type="newline"  -->
<define name="Content.DivListItem">
  <element name="div">
    <attribute name="data-type">
      <value>item</value>
    </attribute>
    <ref name="Content.Note.attrs"/>
    <ref name="Flow.model"/>
  </element>
</define>

<define name="Content.SpanList">
  <element name="span">
    <ref name="div-span-list.attrs"/>
    <oneOrMore>
      <ref name="Content.SpanListItem"/>
    </oneOrMore>
  </element>
</define>

<define name="Content.SpanListItem">
  <element name="span">
    <attribute name="data-type">
      <value>item</value>
    </attribute>
    <ref name="Content.Note.attrs"/>
    <ref name="Inline.model"/>
  </element>
</define>


<define name="Content.ListWithTitle">
  <element name="div">
    <attribute name="data-type">
      <value>list-with-title</value>
    </attribute>
    <ref name="id.attrib.required"/>
    <element name="div">
      <attribute name="data-type">
        <value>title</value>
      </attribute>
      <ref name="id.attrib"/>
      <ref name="Inline.model"/>
    </element>
    <choice>
      <ref name="ul"/>
      <ref name="ol"/>
      <ref name="Content.DivList"/>
    </choice>
  </element>
</define>


<define name="Content.Alternates.class">
  <attribute name="data-type">
    <value>alternates</value>
  </attribute>
  <ref name="id.attrib.required"/>
  <optional>
    <attribute name="data-alt">
      <ref name="Text.datatype"/>
    </attribute>
  </optional>
  <oneOrMore>
    <choice>
      <ref name="img"/>
      <ref name="Content.ImageWithThumbnail"/>
    </choice>
  </oneOrMore>
</define>

<define name="Content.Media">
  <element name="div">
    <attribute name="data-type">
      <value>media</value>
    </attribute>
    <ref name="id.attrib.required"/>
    <attribute name="data-alt">
      <ref name="Text.datatype"/>
    </attribute>
    <optional>
      <attribute name="data-longdesc">
        <ref name="Text.datatype"/>
      </attribute>
    </optional>
    <choice>
      <ref name="img"/>
      <ref name="iframe"/>
      <!-- <ref name="Content.Audio"/>
      <ref name="Content.Video"/>
      <ref name="Content.Labview"/>
      <ref name="Content.Download"/>
      <ref name="Content.Flash"/> -->
    </choice>
  </element>
</define>


<define name="Block.class" combine="choice">
  <choice>
    <ref name="Content.Note"/>
    <ref name="Content.Equation"/>
    <ref name="Content.Exercise"/>
    <ref name="Content.Example"/>
    <ref name="Content.DivList"/>
    <ref name="Content.ListWithTitle"/>
    <ref name="Content.Media"/>
    <element name="div">
      <ref name="Content.Alternates.class"/>
    </element>
    <element name="div">
      <ref name="Content.Newline.class"/>
    </element>
    <!-- TODO: Move FootnoteRefs to only be valid either in a Page or in <body> -->
    <ref name="Content.FootnoteRefs"/>
  </choice>
</define>


<define name="Inline.class" combine="choice">
  <choice>
    <ref name="Content.SpanList"/>
    <ref name="Content.Space"/>
    <ref name="Content.FootnoteNumber"/>
    <element name="span">
      <ref name="Content.Alternates.class"/>
    </element>
    <element name="span">
      <ref name="Content.Newline.class"/>
    </element>
  </choice>
</define>



<!-- The <section> -->
<define name="section">
  <element name="section">
    <ref name="section.attlist"/>
    <ref name="Flow.model"/><!-- TODO: Should this be Block.model? -->
  </element>
</define>

<define name="section.attlist">
  <ref name="Common.attrib"/>
  <attribute name="data-depth">
    <ref name="Number.datatype"/>
  </attribute>
  <optional>
    <attribute name="data-label">
      <ref name="Text.datatype"/>
    </attribute>
  </optional>
  <!-- Found in m51005 (chemistry book col11760)-->
  <optional>
    <attribute name="data-element-type">
      <ref name="Text.datatype"/>
    </attribute>
  </optional>
</define>

<define name="Block.class" combine="choice">
  <ref name="section"/>
</define>




<!-- The <figure> -->
<define name="figure">
  <element name="figure">
    <ref name="figure.attlist"/>
    <ref name="Content.Title.optional"/>
    <ref name="Flow.model"/><!-- TODO: Should this be Block.model? -->
  </element>
</define>

<define name="figure.attlist">
  <ref name="Common.attrib"/>
  <optional>
    <attribute name="data-label">
      <ref name="Text.datatype"/>
    </attribute>
  </optional>
  <optional>
    <attribute name="data-orient">
      <choice>
        <value>vertical</value>
        <value>horizontal</value>
      </choice>
    </attribute>
  </optional>
</define>

<define name="Block.class" combine="choice">
  <ref name="figure"/>
</define>



<!-- The <figcaption> -->
<define name="figcaption">
  <element name="figcaption">
    <ref name="figcaption.attlist"/>
    <!-- Algebra and trigonometry has newlines in the figcaption for some reason -->
    <ref name="Flow.model"/>
  </element>
</define>

<define name="figcaption.attlist">
  <!-- <ref name="Common.attrib"/> -->
  <ref name="id.attrib"/>
</define>

<!-- TODO: Only allow this element inside a <figure> -->
<define name="Block.class" combine="choice">
  <ref name="figcaption"/>
</define>



<!-- <div data-type="page" id="2c962197-8004-45c5-8c65-0eb785cbe09b"> -->
<!-- <cnx-pi data-type="cnx.eoc">class="self-check-questions" title="Self-Check Questions"</cnx-pi> -->
<define name="cnx-pi">
  <element name="cnx-pi">
    <ref name="cnx-pi.attlist"/>
    <ref name="cnx-pi.datatype"/>
  </element>
</define>

<define name="cnx-pi.attlist">
  <attribute name="data-type">
    <choice>
      <value>cnx.eoc</value>
      <ref name="Text.datatype"/>
    </choice>
  </attribute>
</define>

<define name="cnx-pi.datatype">
  <text/>
</define>

<!-- TODO: Only allow this element inside a <figure> -->
<define name="Block.class" combine="choice">
  <ref name="cnx-pi"/>
</define>



</grammar>
